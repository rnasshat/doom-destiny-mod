
class Destiny_Weapon_UACPDW : Destiny_Weapon
{
    override void BeginPlay()
    {
            perks.push(new("Destiny_Perk_Rampage"));
            perks.push(new("Destiny_Perk_Outlaw"));
    }

    Default
    {
        Destiny_Weapon.AmmoSlot     DESTINYWEP_PRIMARY;
        Destiny_Weapon.AmmoCapacity 390;
        Destiny_Weapon.MagazineSize 39;
        Destiny_Weapon.Impact       7;

        Weapon.AmmoType   "Clip";
        Weapon.SlotNumber 1;
    }

    States
    {
    Ready:
        PDWG A 1 A_WeaponReady(WRF_ALLOWRELOAD);
        Loop;
    Select:
        PDWG A 0 { invoker.activatePerks(PT_ONWEAPONSWAP); }
        PDWG A 1 A_Raise();
        Wait;
    Deselect:
        PDWG A 0 { invoker.activatePerks(PT_ONWEAPONSWAP); }
        PDWG A 1 A_Lower();
        Wait;
    Fire:
        PDWG B 0 
        {
            invoker.roundsInMag--;

            if(invoker.roundsInMag <= 0)
                return ResolveState("Reload");
            else 
                return State(null);
        }
        PDWG B 1 Offset(0, 38)
        {
            A_StartSound("weapons/pistol", CHAN_WEAPON);
            A_Overlay(PSP_FLASH, "Flash");
            A_OverlayFlags(PSP_FLASH, PSPF_ADDWEAPON | PSPF_RENDERSTYLE, true);
            A_OverlayRenderstyle(PSP_FLASH, STYLE_Add);
            StandardHitscan(); 
            invoker.activatePerks(PT_ONWEAPONFIRED);
        }
        PDWG B 1 Offset(0, 48);
        PDWG A 1 Offset(0, 40);
        Goto Ready;
    Flash:
        PDWF A 1 Bright A_Light1();
        Goto LightDone;
    Reload:
        PDWG CDE 5 A_SetTics(5/invoker.reloadSpeedDivisor);
        PDWG F   8 A_SetTics(8/invoker.reloadSpeedDivisor);
        PDWG E   3
        {
            A_SetTics(3/invoker.reloadSpeedDivisor);
            invoker.roundsInMag = invoker.magSize;
        }
        PDWG DC  3 A_SetTics(3/invoker.reloadSpeedDivisor);
        PDWG C   0 { invoker.activatePerks(PT_ONWEAPONRELOADED); }
        Goto Ready;
    }
}
